
- set keycloack -> session
- sync data all data.


=== Mai
Task:
- service shopify - admin - customer: sync data from shopify to system/
    -1. Shopify: register webhoook
    -2. Api: sync all, list, id
    -2.1 get all data from shopify
    3. Kafka: connect admin to customer.
        - connect
        send event object
        spring batch: break  data.


    4. Customer: receive data and save DB: sử dụng spring boojot


the same Product:
    --> build UI: call get data.


- Customer: set token.

// in case: register new customer
    Test: get customer -> SSO



=======

1. System:
- post:
    1. map request -> model
        1.1 save
    2. model -> respone
        Customer, Address
    3. Check data time

- get: optinal tìm ko thấy, tìm all, tìm list customer
put: cập nhật lớp con

2. Đăng ký web hook -> sync data về app -> lưu vào đoàng hoàng
    Xoá đi.

3. Phần quyền
Làm dần dần các services.
test đồ chạy ổn -> check kỹ logic // thật chuẩn chỉnh.
xây dunựng frontend.

Học docker deploy.
Học k8 quản lý.

Mowr rộng thêm.


=== Resource
template: https://github.dev/osopromadze/Spring-Boot-Blog-REST-API/blob/main/src/main/java/com/sopromadze/blogapi/service/UserService.java
mapper: https://modelmapper.org/user-manual/configuration/#matching-strategies
    https://github.dev/ferhatclk/RentACar/blob/Main/src/main/java/com/kodlamaio/rentAcar/bussines/response/cars/GetByIdCarResponse.java
    https://github.com/arey/java-object-mapper-benchmark/blob/master/src/main/java/com/javaetmoi/benchmark/mapping/mapper/jmapper/JMapperMapper.java

- setup win:
- hôm xong xuôi phần customer + tìm phần tạo token.
- set up luôn keycloack:

Enum:
- https://www.youtube.com/watch?v=wq9SJb8VeyM
- https://github.com/shivkumar98/OCP-Java-Examples/blob/main/src/chapter_1/chapter_1_6_enums/README.md