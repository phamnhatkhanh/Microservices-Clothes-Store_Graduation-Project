Customer:
- Admin: call api get all data
- system: save data
write api CRUD

template: https://github.dev/osopromadze/Spring-Boot-Blog-REST-API/blob/main/src/main/java/com/sopromadze/blogapi/service/UserService.java
mapper: https://modelmapper.org/user-manual/configuration/#matching-strategies
    https://github.dev/ferhatclk/RentACar/blob/Main/src/main/java/com/kodlamaio/rentAcar/bussines/response/cars/GetByIdCarResponse.java
    https://github.com/arey/java-object-mapper-benchmark/blob/master/src/main/java/com/javaetmoi/benchmark/mapping/mapper/jmapper/JMapperMapper.java

- setup win:
- hôm xong xuôi phần customer + tìm phần tạo token.
- set up luôn keycloack:




1. System:
- post:
    1. map request -> model
        1.1 save
    2. model -> respone
        Customer, Address
    3. Check data time

- get: optinal tìm ko thấy, tìm all, tìm list customer
put: cập nhật lớp con

2. Đăng ký web hook -> sync data về app -> lưu vào đoàng hoàng
    Xoá đi.

3. Phần quyền
Làm dần dần các services.
test đồ chạy ổn -> check kỹ logic // thật chuẩn chỉnh.
xây dunựng frontend.

Học docker deploy.
Học k8 quản lý.

Mowr rộng thêm.


Admin:
    Call api get all data
        resolve problem paganani page.
    Event -> save Customer database.


Morgin: done api CRUD and register webhook -> get data.
